// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Siriayanur/GoConcurrency/db (interfaces: IDB)

// Package db is a generated GoMock package.
package db

import (
	reflect "reflect"

	models "github.com/Siriayanur/GoConcurrency/models"
	gomock "github.com/golang/mock/gomock"
)

// MockIDB is a mock of IDB interface.
type MockIDB struct {
	ctrl     *gomock.Controller
	recorder *MockIDBMockRecorder
}

// MockIDBMockRecorder is the mock recorder for MockIDB.
type MockIDBMockRecorder struct {
	mock *MockIDB
}

// NewMockIDB creates a new mock instance.
func NewMockIDB(ctrl *gomock.Controller) *MockIDB {
	mock := &MockIDB{ctrl: ctrl}
	mock.recorder = &MockIDBMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDB) EXPECT() *MockIDBMockRecorder {
	return m.recorder
}

// AddDataToDB mocks base method.
func (m *MockIDB) AddDataToDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddDataToDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// AddDataToDB indicates an expected call of AddDataToDB.
func (mr *MockIDBMockRecorder) AddDataToDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddDataToDB", reflect.TypeOf((*MockIDB)(nil).AddDataToDB))
}

// InitDB mocks base method.
func (m *MockIDB) InitDB() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitDB")
	ret0, _ := ret[0].(error)
	return ret0
}

// InitDB indicates an expected call of InitDB.
func (mr *MockIDBMockRecorder) InitDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitDB", reflect.TypeOf((*MockIDB)(nil).InitDB))
}

// ReadDataFromDB mocks base method.
func (m *MockIDB) ReadDataFromDB() ([]models.Item, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadDataFromDB")
	ret0, _ := ret[0].([]models.Item)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadDataFromDB indicates an expected call of ReadDataFromDB.
func (mr *MockIDBMockRecorder) ReadDataFromDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadDataFromDB", reflect.TypeOf((*MockIDB)(nil).ReadDataFromDB))
}
